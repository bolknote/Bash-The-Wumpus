#!/bin/bash
# https://www.atariarchives.org/bcc1/showpage.php?page=250

ROWS=20
COLS=3
NUM_PITS=2
NUM_BATS=2

ROOMS=(\
	2 5 8 1 3 10 2 4 12 3 5 14 1 4 6 5 7 15 6 8 17 1 7 9 8 10 18 2 9 11 10 12 19 \
	3 11 13 12 14 20 4 13 15 6 14 16 15 17 20 7 16 18 9 17 19 11 18 20 13 16 19 \
)

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# generating a maze of directories by linking them with symlinks
generate_rooms() {
	for ((i=1; i<=$ROWS; i++)); do
		mkdir -p "cave/$i"

		for ((j = 0; j < $COLS; j++)); do
			offset=$((i * $COLS - $COLS + j))

			ln -s "$SCRIPT_DIR/cave/${ROOMS[$offset]}" "cave/$i/${ROOMS[$offset]}"
		done
	done
}

# returns a random number of an empty room
random_empty_room() {
	local number

	while true; do
		number=$((RANDOM % 20 + 1))
		find "cave/$number" -type f | grep -q . || break
	done

	return $number
}

# puts hazard in a random room
generate_hazards() {
	local num="$1"
	local haz="$2"

	for ((i=0; i<$num; i++)); do
	 	random_empty_room
	 	local filename="cave/$?/$haz"
	 	touch "$filename" && chmod +x "$filename"
	done
}

on_exit() {
	rm -r "$SCRIPT_DIR/cave/"
}

main() {
	cd "$SCRIPT_DIR"
	[ -d cave ] && rm -r cave

	generate_rooms

	generate_hazards $NUM_BATS BAT
	generate_hazards $NUM_PITS PIT
	generate_hazards 1 WUMPUS

	# puts the player in a random room
	random_empty_room
	cd "cave/$?"

	clear
	cat <<HELP
WELCOME TO 'HUNT THE WUMPUS'
  THE WUMPUS LIVES IN A CAVE OF 20 ROOMS. EACH ROOM
HAS 3 TUNNELS LEADING TO OTHER ROOMS. (LOOK AT A
DODECAHEDRON TO SEE HOW THIS WORKS-IF YOU DON'T KNOW
WHAT A DODECAHEDRON IS, ASK SOMEONE)

     HAZARDS:
 BOTTOMLESS PITS - TWO ROOMS HAVE BOTTOMLESS PITS IN THEM
     IF YOU GO THERE, YOU FALL INTO THE PIT (& LOSE!)
 SUPER BATS - TWO OTHER ROOMS HAVE SUPER BATS. IF YOU
     GO THERE, A BAT GRABS YOU AND TAKES YOU TO SOME OTHER
	 ROOM AT RANDOM. (WHICH MIGHT BE TROUBLESOME)

     WUMPUS:
 THE WUMPUS IS NOT BOTHERED BY THE HAZARDS (HE HAS SUCKER
 FEET AND IS TOO BIG FOR A BAT TO LIFT).  USUALLY
 HE IS ASLEEP. TWO THINGS WAKE HIM UP: YOUR ENTERING
 HIS ROOM OR YOUR SHOOTING AN ARROW.
     IF THE WUMPUS WAKES, HE MOVES (P=.75) ONE ROOM
 OR STAYS STILL (P=.25). AFTER THAT, IF HE IS WHERE YOU
 ARE, HE EATS YOU UP (& YOU LOSE!)

     YOU:
 EACH TURN YOU MAY MOVE OR SHOOT A CROOKED ARROW
   MOVING: YOU CAN GO ONE ROOM (THRU ONE TUNNEL)
   ARROWS: YOU HAVE 5 ARROWS. YOU LOSE WHEN YOU RUN OUT.
   EACH ARROW CAN GO FROM 1 TO 5 ROOMS. YOU AIM BY TELLING
   THE COMPUTER THE ROOM#S YOU WANT THE ARROW TO GO TO.
   IF THE ARROW CAN'T GO THAT WAY (IE NO TUNNEL) IT MOVES
   AT RAMDOM TO THE NEXT ROOM.
     IF THE ARROW HITS THE WUMPUS, YOU WIN.
     IF THE ARROW HITS YOU, YOU LOSE.

     WARNINGS:
      WHEN YOU ARE ONE ROOM AWAY FROM WUMPUS OR HAZARD,
     THE COMPUTER SAYS:
  WUMPUS-  'I SMELL A WUMPUS'
  BAT   -  'BATS NEARBY'
  PIT   -  'I FEEL A DRAFT'

     COMMANDS:
      LS - TO SEE WHICH ROOMS THE TUNNELS LEAD TO
      CD - GO TO A ROOM WITH A GIVEN NUMBER
      RM - SHOOT THROUGH TUNNELS (SEPARATED BY A SPACE)
      EXIT - LEAVE THE GAME

HELP

	/bin/bash --rcfile <(/usr/bin/awk '/subshell$/{p=1}p{print}' "$SCRIPT_DIR/${BASH_SOURCE[0]}")
	trap on_exit EXIT
}

main
exit

# (don't modify this comment) rcfile for subshell

NUM_ARROWS=5

end() {
	echo "$1"
	exit
}

prompt() {
	local hazs=()
	local n

	while read n; do
		case "$n" in
			*BAT) hazs+=(BATS_NEARBY);;
			*PIT) hazs+=(I_FEEL_A_DRAFT);;
			*WUMPUS) hazs+=(I_SMELL_A_WUMPUS);;
		esac
	done < <(/usr/bin/find -L . -maxdepth 2 -type f | /usr/bin/awk -F/ '!v[$NF]++{print}')

	printf "%s " $(/usr/bin/basename "$(/bin/realpath)")
	if [ ${#hazs[@]} -gt 0 ]; then
		echo -n "(${hazs[@]})" | /usr/bin/sed 's/ /, /g;y/_/ /'
	fi

	echo '> '
}

bat() {
	echo 'ZAP--SUPER BAT SNATCH! ELSEWHEREVILLE FOR YOU!'

	local path="$(/usr/bin/dirname "$(/bin/realpath)")"
	local except=( $(/usr/bin/find "$path" -type f | /usr/bin/awk -F/ '{print$(NF-1)}') )

	while true; do
		local number=$((RANDOM % 20 + 1))
		[[ " ${except[@]} " =~ " $number " ]] || break
	done

	command cd "$path/$number"
}

cd() {
	local room="$1"
	if [ "$room" -eq "$room" ] 2>/dev/null; then
		command cd -- "$room" &> /dev/null

		if [ $? -eq 0 ]; then
			local n

			while read n; do
				case "$n" in
					*BAT) bat ;;
					*WUMPUS) end '... OOPS! BUMPED A WUMPUS!' ;;
					*PIT) end 'YYYIIIEEEE... FEEL IN PIT' ;;
				esac
			done < <(/bin/ls -1)

			export HOME="$(/bin/realpath)"
			export OLDPWD="$HOME"
			return
		fi
	fi

	echo "NOT POSSIBLE - $1"
	return 1
}

rm() {
	local path='.'
	local folder
	local random_room
	local player_room=$(/usr/bin/basename "$(/bin/pwd)")

	if [ $NUM_ARROWS -gt 0 ]; then
		let 'NUM_ARROWS--'

		for folder in "${@:0:5}"; do
			if [ $player_room -eq $folder ]; then
				end 'OUCH! ARROW GOT YOU!'
			fi

			path="$path/$folder"

			if [ -d "$path" ]; then
				/usr/bin/find "$path/" -type f -not -name PIT -delete -print |
				/usr/bin/grep -Fq WUMPUS && end 'AHA! YOU GOT THE WUMPUS!'
			else
				random_room=$((RANDOM % 20 + 1))

				if [ $player_room -eq $random_room ]; then
					end 'OUCH! ARROW GOT YOU!'
				fi
			fi
		done
	else
		end 'THE ARROWS ARE OUT, WUMPUS GOT YOU!'
	fi

	# Wumpus move
	local w=$((RANDOM % 100 + 1))
	if [ "$w" -le 75 ]; then
		local path="$(/usr/bin/dirname "$(/bin/realpath)")"
		while true; do
			local number=$((RANDOM % 20 + 1))
			[[ ! -f "$path/$number/BAT" && ! -f "$path/$number/PIT" ]] && break
		done

		if [ "$player_room" -eq "$number" ]; then
			end 'TSK TSK TSK- WUMPUS GOT YOU!'
		fi

		/bin/mv "$(/usr/bin/find "$path" -name WUMPUS)" "$path/$number/"
	fi
}

set -o noglob

bind '"\t":'

export PS1="\$(prompt)"
export PS2=
export PATH=

alias ls='/bin/ls --color #'
alias pwd='/usr/bin/basename "$(/bin/realpath)"'
alias CD=cd
alias RM=rm
alias LS=ls
alias EXIT=exit
alias alias=''
alias set=echo
